import { BaseRequestOptions, BaseService, BaseServiceOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
import { AccessLevel } from './ResourceAccessRequests';
interface IncludeInherited {
    includeInherited?: boolean;
}
export declare class ResourceMembers extends BaseService {
    constructor(resourceType: string, options: BaseServiceOptions);
    all(resourceId: string | number, { includeInherited, ...options }?: IncludeInherited & PaginatedRequestOptions): Promise<import("../infrastructure").GetResponse>;
    add(resourceId: string | number, userId: number, accessLevel: AccessLevel, options?: BaseRequestOptions): Promise<object>;
    edit(resourceId: string | number, userId: number, accessLevel: AccessLevel, options?: BaseRequestOptions): Promise<object>;
    show(resourceId: string | number, userId: number, { includeInherited, ...options }?: IncludeInherited & Sudo): Promise<import("../infrastructure").GetResponse>;
    remove(resourceId: string | number, userId: number, options?: Sudo): Promise<object>;
}
export {};
