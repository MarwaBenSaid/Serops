import { BaseService, BaseServiceOptions, PaginatedRequestOptions, BaseRequestOptions } from '../infrastructure';
export interface ResourceVariableSchema {
    key: string;
    variable_type: 'env_var' | 'file';
    value: string;
}
export declare class ResourceVariables extends BaseService {
    constructor(resourceType: string, options: BaseServiceOptions);
    all(resourceId: string | number, options?: PaginatedRequestOptions): Promise<ResourceVariableSchema[]>;
    create(resourceId: string | number, options?: BaseRequestOptions): Promise<object>;
    edit(resourceId: string | number, keyId: string, options?: BaseRequestOptions): Promise<object>;
    show(resourceId: string | number, keyId: string, options?: PaginatedRequestOptions): Promise<ResourceVariableSchema>;
    remove(resourceId: string | number, keyId: string, options?: PaginatedRequestOptions): Promise<object>;
}
