import { BaseRequestOptions, BaseService, PaginatedRequestOptions, Sudo } from '../infrastructure';
import { DeploymentSchema } from './Deployments';
import { ProjectSchema } from './Projects';
export interface EnvironmentSchema {
    id: number;
    name: string;
    slug?: string;
    external_url?: string;
    project?: ProjectSchema;
    state?: string;
}
export interface EnvironmentDetailSchema extends EnvironmentSchema {
    last_deployment?: DeploymentSchema;
    deployable?: DeploymentSchema;
}
export declare class Environments extends BaseService {
    all(projectId: string | number, options?: PaginatedRequestOptions): Promise<EnvironmentSchema[]>;
    show(projectId: string | number, environmentId: number, options?: Sudo): Promise<EnvironmentDetailSchema>;
    create(projectId: string | number, options?: BaseRequestOptions): Promise<object>;
    edit(projectId: string | number, environmentId: number, options?: BaseRequestOptions): Promise<object>;
    remove(projectId: string | number, environmentId: number, options?: Sudo): Promise<object>;
    stop(projectId: string | number, environmentId: number, options?: Sudo): Promise<object>;
}
