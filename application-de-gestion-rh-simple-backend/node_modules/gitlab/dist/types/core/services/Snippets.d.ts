import { BaseRequestOptions, BaseService, PaginatedRequestOptions, Sudo } from '../infrastructure';
export declare type SnippetVisibility = 'private' | 'public' | 'internal';
export declare class Snippets extends BaseService {
    all({ public: p, ...options }: {
        public: boolean;
    } & PaginatedRequestOptions): Promise<import("../infrastructure").GetResponse>;
    content(snippetId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
    create(title: string, fileName: string, content: string, visibility: SnippetVisibility, options?: BaseRequestOptions): Promise<object>;
    edit(snippetId: number, options?: BaseRequestOptions): Promise<object>;
    remove(snippetId: number, options?: Sudo): Promise<object>;
    show(snippetId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
    userAgentDetails(snippetId: number, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
}
